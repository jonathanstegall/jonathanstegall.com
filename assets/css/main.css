/*!
CSS for https://jonathanstegall.com in 2019
*/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{box-sizing:border-box;background:#fff;margin:0;padding:0}*,:after,:before{box-sizing:inherit}body{margin:0 auto;padding:0;color:#333;background:#fff}blockquote,q{quotes:"" ""}blockquote:after,blockquote:before,q:after,q:before{content:""}hr{background-color:#ccc;border:0;height:1px;margin-bottom:1.5em}img{height:auto;max-width:100%}figure{margin:1em 0}label{line-height:1.5em;display:inline-block}input,select,textarea{max-width:100%;font-family:athelas,Georgia,Times New Roman,Times,serif;font-size:99%;line-height:normal}html{font-size:24px;line-height:1.5}body{font-family:athelas,Georgia,Times New Roman,Times,serif}.o-wrapper{line-height:1.3em}p{margin:0;padding:0;margin-bottom:1em}p:last-child{margin-bottom:0}blockquote{border-left:5px solid #c3c8c7;margin-left:0;padding:0 0 .5em 1em;margin-bottom:1em}.screen-reader-text{clip:rect(1px,1px,1px,1px);clip-path:polygon(0 0,0 0,0 0,0 0);position:absolute!important;white-space:nowrap;height:1px;width:1px;overflow:hidden}a.a-button,button[type=button],button[type=submit],input[type=submit]{padding:.25em;font-size:1.5em;font-weight:400;background:#3b8e8a;color:#fff;font-family:tablet-gothic,Helvetica,Arial,sans-serif;font-feature-settings:"calt" off,"dlig" off,"ss01" off,"liga" off;font-style:normal;font-variant:normal;border:0;display:inline-block;margin-right:.5em;cursor:pointer;line-height:23px}a.a-button:link,a.a-button:visited,button[type=button]:link,button[type=button]:visited,button[type=submit]:link,button[type=submit]:visited,input[type=submit]:link,input[type=submit]:visited{background:#3b8e8a;color:#fff;text-decoration:none}a.a-button:active,a.a-button:focus,a.a-button:hover,button[type=button]:active,button[type=button]:focus,button[type=button]:hover,button[type=submit]:active,button[type=submit]:focus,button[type=submit]:hover,input[type=submit]:active,input[type=submit]:focus,input[type=submit]:hover{background:palette(red,dark);color:#fff;text-decoration:none}a.a-button.a-button-disabled,a.a-button:disabled,button[type=button].a-button-disabled,button[type=button]:disabled,button[type=submit].a-button-disabled,button[type=submit]:disabled,input[type=submit].a-button-disabled,input[type=submit]:disabled{cursor:not-allowed;opacity:.5}.a-button-sentence a.a-button:link,.a-button-sentence a.a-button:visited,.a-button-sentence button[type=button],.a-button-sentence button[type=submit]{margin-right:0}.a-input-with-button{width:100%;margin-bottom:.375em;display:flex}.a-input-with-button a.a-button,.a-input-with-button button[type=button],.a-input-with-button button[type=submit],.a-input-with-button input[type=submit]{margin:0}.m-category-info .a-description{font-size:1.23em;margin:20px 0}.a-form-caption{font-size:92.3%;font-family:tablet-gothic,Helvetica,Arial,sans-serif}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-family:tablet-gothic,Helvetica,Arial,sans-serif;font-weight:700;margin:0}.h2,h2{font-size:1.5em;padding:0 0 .25em}.a-home-grouped{padding:.5em 0}.m-home-group-4 .a-home-grouped{width:calc(25% - 1.5em)}.m-home-group-3 .a-home-grouped{width:calc(33.33333% - 1.33333em)}.m-home-group-2 .a-home-grouped{width:calc(50% - 1em)}.a-home-standalone{grid-column:2/span 9;position:relative;font-size:1.2rem}a{text-decoration:none;transition:color .3s ease-in-out 0s}a,a:visited{color:#3b8e8a}a:active,a:focus,a:hover{color:#6cc3be}a:active,a:focus{outline:none}a.active{color:#6cc3be}ol,ul{margin:0 0 1.5em 3em}ul{list-style:disc}ol{list-style:decimal}li>ol,li>ul{margin-bottom:0;margin-left:1.5em}dt{font-weight:700}dd{margin:0 1.5em 1.5em}.a-logo{font-family:athelas,Georgia,Times New Roman,Times,serif;font-weight:700;font-size:1.8rem;line-height:normal;margin:0;grid-column:2/span 1}.a-logo a{color:#2b6a67;text-decoration:none}.a-logo a.active,.a-logo a:active,.a-logo a:hover{color:#fff}.a-media-meta{display:block;margin-bottom:0;margin-top:0;font-family:tablet-gothic,Helvetica,Arial,sans-serif}.a-search-highlight{background:#9ec7c5}.o-footer .a-site-info{font-size:.7rem;margin-bottom:20px}table{margin:0 0 1.5em;width:100%}.m-home-group{grid-column:2/span 12;font-size:.75rem}.m-home-section{display:grid;grid-template-columns:[edge-start] minmax(1rem,1fr) [content-start] repeat(12,minmax(1rem,96px)) [content-end] minmax(1rem,1fr) [edge-end];grid-auto-rows:minmax(min-content,max-content);background:#fff;padding:0 0 1.5em}.m-home-section:first-of-type{padding:1.5em 0}.m-home-section.m-home-section-jonathan h1{color:inherit;font-size:2.5rem;margin:0;font-weight:700;grid-column:2/span 5;position:relative}.m-home-section.m-home-section-jonathan article{margin-top:.5em;grid-column:8/span 6;font-size:1.2rem}nav[role=navigation]{grid-column:10/span 8;font-family:tablet-gothic,Helvetica,Arial,sans-serif;font-size:.8rem;line-height:2;font-weight:700}nav[role=navigation]>ul{display:flex;justify-content:space-between;list-style:none;margin:0;padding:0}nav[role=navigation]>ul li{width:auto}nav[role=navigation]>ul a{padding:0 1em;color:#fff}nav[role=navigation]>ul a.active,nav[role=navigation]>ul a:active,nav[role=navigation]>ul a:focus,nav[role=navigation]>ul a:hover{color:#2b6a67}footer{background:#0e2221;color:#fff;font-size:.75rem;padding:1.5em 5%;display:grid;grid-template-columns:[edge-start] minmax(1rem,1fr) [content-start] repeat(12,minmax(1rem,96px)) [content-end] minmax(1rem,1fr) [edge-end];grid-auto-rows:minmax(min-content,max-content)}footer section.m-more{grid-column:1/span 7}footer section.m-copyright{grid-column:9/span 6;text-align:right}header[role=banner]{grid-template-columns:[edge-start] minmax(1rem,1fr) [content-start] repeat(16,minmax(1rem,72px)) [content-end] minmax(1rem,1fr) [edge-end];grid-auto-rows:minmax(min-content,max-content);display:grid;background:#0e2221;color:#fff;padding:.5em 0}.o-main{padding:0 5%;background:rgba(14,34,33,.25)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
