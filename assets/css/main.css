/*!
CSS for https://jonathanstegall.com in 2020
*/:root{--scaleint:1.25;--scale0:1rem;--scale-1:calc(var(--scale0)/var(--scaleint));--scale-2:calc(var(--scale-1)/var(--scaleint));--scale1:calc(var(--scale0)*var(--scaleint));--scale2:calc(var(--scale1)*var(--scaleint));--scale3:calc(var(--scale2)*var(--scaleint));--scale4:calc(var(--scale3)*var(--scaleint))}:root{--grid--gutter:0.5em;--grid--wrapper:[edge-start] minmax(1rem,1fr) [content-start] repeat(12,minmax(1rem,4rem)) [content-end] minmax(1rem,1fr) [edge-end];--grid--section:repeat(12,minmax(1rem,4rem))}:root{--space-2:calc(var(--grid--gutter)*0.25);--space-1:calc(var(--grid--gutter)*0.5);--space0:var(--grid--gutter);--space1:calc(var(--grid--gutter)*2);--space2:calc(var(--grid--gutter)*3);--space3:calc(var(--grid--gutter)*4);--space4:calc(var(--grid--gutter)*6)}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{box-sizing:border-box;background:#fff;margin:0;padding:0}*,:after,:before{box-sizing:inherit}body{margin:0 auto;padding:0;color:#333;background:#fff}blockquote,q{quotes:"" ""}blockquote:after,blockquote:before,q:after,q:before{content:""}hr{background-color:#ccc;border:0;height:1px;margin-bottom:1.5}img{height:auto;max-width:100%}figure{margin:1em 0}form{margin-bottom:1em}form:last-child{margin-bottom:0}fieldset{padding:0;margin:0;border:0}label{display:inline-block}input,select,textarea{max-width:100%;outline:none;-webkit-appearance:none;border:0;padding:var(--space0)}input[type=submit]{cursor:pointer;padding:var(--space0) var(--space1);background:#3b8e8a;color:#fff}input[type=submit]:focus,input[type=submit]:hover{background:#6cc3be}.screen-reader-text{clip:rect(1px,1px,1px,1px);clip-path:polygon(0 0,0 0,0 0,0 0);position:absolute!important;white-space:nowrap;height:1px;width:1px;overflow:hidden}html{font-size:150%}body,html{line-height:1.5}body{font-family:athelas,Georgia,Times New Roman,Times,serif;font-size:var(--scale0)}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-family:tablet-gothic,Helvetica,Arial,sans-serif;font-weight:700;margin:0;padding:0}.h1,h1{font-size:var(--scale4)}.h2,h2{font-size:var(--scale3);padding:0 0 var(--space-1) 0}.h3,h3{font-size:var(--scale2)}.h4,.h5,h4,h5{font-size:var(--scale1)}.h5,h5{font-weight:500}p{margin:0;padding:0;margin-bottom:var(--space1)}p:last-child{margin-bottom:0}blockquote{border-left:5px solid #c3c8c7;margin-left:0;padding:0 0 var(--space0) var(--space1);margin-bottom:var(--space1)}label{line-height:1.5}input,select,textarea{font-family:tablet-gothic,Helvetica,Arial,sans-serif;line-height:1.5}input[type=submit]{font-weight:700}a{text-decoration:none;transition:color .3s ease-in-out 0s}a,a:visited{color:#3b8e8a}a:active,a:focus,a:hover{color:#6cc3be}a:active,a:focus{outline:none}a.active{color:#6cc3be}ol,ul{margin:0 0 1.5 3em}ul{list-style:disc}ol{list-style:decimal}li>ol,li>ul{margin-bottom:0;margin-left:1.5}dt{font-weight:700}dd{margin:0 1.5em 1.5em}.a-logo{font-family:athelas,Georgia,Times New Roman,Times,serif;font-weight:700;font-size:1.8rem;line-height:normal;margin:0;grid-column:2/span 1}.a-logo a{color:#2b6a67;text-decoration:none}.a-logo a.active,.a-logo a:active,.a-logo a:hover{color:#fff}.a-button-sentence input{width:calc(100% - 100px)}.a-button-sentence input[type=submit]{max-width:96px}.m-home-section{padding:0 0 var(--space4) 0;grid-column:2/span 8;position:relative;font-size:1.2rem}.m-home-section:first-of-type{padding:var(--space2) 0 var(--space4) 0}.m-home-section:nth-child(2n){grid-column:5/span 8}.m-home-section:nth-child(odd){grid-column:3/span 8}.m-home-section.m-home-section-jonathan{grid-column:2/span 12;display:grid;grid-template-columns:var(--grid--section);column-gap:var(--grid--gutter)}.m-home-section.m-home-section-jonathan h1{color:inherit;font-size:2.5rem;margin:0;font-weight:700;grid-column:1/span 6;position:relative}.m-home-section.m-home-section-jonathan article{margin-top:.5em;grid-column:7/span 6;font-size:1.2rem}nav[role=navigation]{grid-column:8/span 6;font-family:tablet-gothic,Helvetica,Arial,sans-serif;font-size:var(--scale-1);font-weight:700}nav[role=navigation]>ul{display:flex;justify-content:space-between;list-style:none;margin:0;padding:0}nav[role=navigation]>ul li{width:auto}nav[role=navigation]>ul a{padding:var(--space0) var(--space1);color:#fff}nav[role=navigation]>ul a.active,nav[role=navigation]>ul a:active,nav[role=navigation]>ul a:focus,nav[role=navigation]>ul a:hover{color:#2b6a67}nav[role=navigation]>ul a:first-of-type{margin-left:calc(-1*var(--space1))}footer{display:grid;grid-template-columns:var(--grid--wrapper);column-gap:var(--grid--gutter);background:#0e2221;color:#fff;font-size:75%;padding:var(--space2)}footer section.m-more{grid-column:2/span 6}footer section.m-copyright{grid-column:8/span 6;text-align:right}header[role=banner]{display:grid;grid-template-columns:var(--grid--wrapper);column-gap:var(--grid--gutter);background:#0e2221;color:#fff;padding:var(--space0) 0;align-items:center}.o-main{background:#fff;display:grid;grid-template-columns:var(--grid--wrapper);column-gap:var(--grid--gutter)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
